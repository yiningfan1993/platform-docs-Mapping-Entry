**********************
QC
**********************

The QC tab contains a collection of tools to support the quality control (QC) process of one or more vector layers. Delivered vector results will be set up automatically as QC review project under QC tab. Users with permission can participate the QC review projects simultaneously to examine the vector results.

QC Tab Interface
********************

A list of ongoing projects will be displayed in a tabular format once a user enter the QC tab. It contains the following project information:

  * ID

    * A unique project ID
  * Name

    * An ownership tag
      
      * :guilabel:`Mine`: project belongs to the current user
      * :guilabel:`Others`: project does NOT belong to the current user

    * A unique project name
  * Created

    * Time the project was created
  * Status

    * Status of the project
    * One of [:guilabel:`prepare_data`, :guilabel:`pending`, :guilabel:`active`, :guilabel:`stopped`, :guilabel:`completed`, :guilabel:`error`, :guilabel:`active(all tasks submitted)`]
    * Manually updated by a Project Admin, except for [:guilabel:`prepare_data`, :guilabel:`error`, :guilabel:`active(all tasks submitted)`] which are generated by the system
  * Progress

    * Tasks counts depending on their status

      * :guilabel:`Total`: the total number of tasks
      * :guilabel:`Pending`: number of tasks that have never been acquired or reviewed by any reviewer
      * :guilabel:`Commenter Submitted`: number of tasks that have been reviewed and submitted by a Commenter
      * :guilabel:`Completed`: number of tasks that have been acquired and reviewed by a Checker

.. figure:: /images/QC/QCLIST.png
   :alt: QC LIST
   :align: center
   :width: 750

   *Example of QC Project List*


Action Functions: Member Management |membersmanagebutton|
*************************************************************

QC project admin can follow the steps below to manage participants in the QC review projects:

#. Project Admin will be able to manage the access of Members who may participate in the project by clicking on the |membersmanagebutton| button located in the action column. 
#. In the prompt Member management window, a list of available members in the organization that are available to participate in the QC review project will be displayed with their corresponding roles.
#. Project admin can add specific members to the project by clicking on the checkbox then click on update button.

.. figure:: /images/QC/membermanagementwindow.png
   :alt: member management window pop up
   :align: center
   :width: 550

   *Example of Member Management Tool*

.. Action Functions: Settings
.. ***************************

Action Functions: Open Project |openqcprojectbutton|
*******************************************************

Users can open the QC Project with the |openqcprojectbutton| button under the :guilabel:`Action` column of the QC project list. Once a project is opened, they will see the project interface with a :ref:`QC:Layers Panel` on the left, a :ref:`QC:Map Viewer` on the right, and a :ref:`QC:Toolbar` with a set of tools at the top.

.. figure:: /images/QC/qcmapbrowser.png
   :alt: A QC Project opened with a set of QC tools.
   :align: center

   *The QC Tools Project Interface*

Layers Panel
==============================
The Layers Panel on the left displays a list of layers that are part of the project and allows users to toggle their visibility in the Map Viewer. This consists of the following layers:

.. figure:: /images/QC/Layers_Example.png
   :alt: Layers Panel Demonstration
   :align: center
   :height: 200

   *Example of all types of layers in QC tools Layers Panel*

.. _qc-task-layer:

  * |tasklayercommentlayer| **Comment Layer** : A layer showing the comments made on the current task.
  * |tasklayerworkingtask| **Working Task Layer** : A layer representing the working area of the current task.
  * |tasklayer| **Task Layer** : The task assignment grid.

    * |tasklayerpending| **Pending** :

      * Tasks that have NOT been acquired by any users yet.
      * These tasks will be displayed with opacity indicating that no modification is allowed until the task is acquired by a user.

    * |tasklayerunderreviewbyothers| **Under Review by Others** :

      * Tasks that have been acquired but not yet submitted by other users.
      * These tasks will be displayed with opacity indicating that no modification is allowed by the current user.

    * |tasklayersubmittedbyme| **Submitted by Me** :

      * Tasks that have been reviewed and submitted by the current user.
      * Comments made in these tasks can be changed by the current user or project admin while the QC Project is active.
      * These tasks can be acquired and changed by the current user or any checker. (status will be updated to *Under Review by Others*)

    * |tasklayersubmittedbycommenter| **Submitted by Commenter** :

      * Tasks that have been reviewed and submitted by a commenter.
      * Comments made in these tasks can be changed by the commenter who submitted this task or project admin while the QC Project is active.
      * These tasks can be acquired and changed by the current user or any checker. (status will be updated to *Under Review by Others*)

    * |tasklayersubmittedbyothers| **Submitted by Checker** :

      * Tasks that have been reviewed and submitted by a checker.
      * These tasks can be acquired and changed by a checker. (status will be updated to *Under Review by Others*)
      * These tasks can be changed and acquired by the current user or any checker. (status will be updated to *Under Review by Others*)

  * **Target Vector Layers** : The vector layers to be reviewed.
  * **Underlying Raster Layers** : The raster layers to review against.


.. figure:: /images/QC/layers_panel_demo.png
   :alt: Layers Panel Demonstration
   :align: center
   :height: 300

   *Example of Task Layer and Current Working Task Layer*

Disable the Identify Feature Tool on Layers
--------------------------------------------------------------------------------------
For each vector layer in the layer panel, there should be a |enabledidentifyfeature| icon displayed before the layer name by default. This is used to control whether the attribute values of a vector layer will be displayed when using the identify feature tool.

  * |enabledidentifyfeature| means the attribute values are currently visible while using the identify feature tool
  * |disabledidentifyfeature| means the attribute values are currently **NOT** visible while using the identify feature tool
  * Clicking on the icon allows users to switch between the above two settings.

.. |enabledidentifyfeature| image:: /images/QC/visible_QC-identify-feature.svg
    :width: 20

.. |disabledidentifyfeature| image:: /images/QC/not-visible_QC-identify-feature.svg
    :width: 20

Change Layer Property
------------------------------
users can adjust layer properties in QC tools layer panel if required.

After highlighting the layer, users can right click on the layer and select Properties.

The following properties are adjustable:

    * Color: Color of the feature class
    * Opacity: Change opacity of the layer or feature class
    * Render Type: Fill/Line

.. figure:: /images/QC/LayerProperties.png
   :alt: Layers Properties
   :align: center
   :height: 300

   *Layer Properties*

Focus on Layers or Groups of Layers
--------------------------------------
Users can click on a vector/raster layer or a group of layers to focus on a single layer/group, or hold :kbd:`alt` and click to focus on multiple layers/groups. All the layers in focus should be highlighted in blue and can be toggled on/off with the shortcut :kbd:`r`.

The QC tool map viewer has following tools:

* Scale bar: represents the relationship between distance on a map and in the real world
* Units of Measurement: allows a user to switch between the imperial (U.S.) and metric (international) system
* Ratio Scale: displays the ratio between one unit on the map and one unit in the real world; can be manually updated by the user (input the target ratio and hit enter)


Map Viewer
==============================

The Map Viewer provides a visualization of all features in the selected layers and the underlying imagery. Users can examine individual features in the map by checking its geometry and attribute values.

Toolbar
==============================

The Toolbar contains a collection of tools that allows users to visualize the map features, pinpoint the exact locations where they would like to comment on, and create and edit their text comments.

.. list-table:: QC Toolbar
  :widths: 30 40
  :width: 30
  :header-rows: 1
  :align: center

  * - Button
    - Name
  * - |acquiretaskbutton|
    - :ref:`acquire-task`
  * - |submittaskbutton|
    - :ref:`submit-task`
  * - |autoacquirebutton|
    - :ref:`auto-acquire`
  * - |returntaskbutton|
    - :ref:`return-task`
  * - |recenterworkingtaskbutton|
    - :ref:`recenter-working-task`
  * - |qctoolsrefreshprojectbutton|
    - :ref:`qc-tools-refresh-project`
  * - |commenteditingbutton|
    - :ref:`comment-editing`
  * - |searchlocationbutton|
    - :ref:`qc-tools-search-location`
  * - |showcoordinatesbutton|
    - :ref:`qc-tools-show-coordinates`
  * - |identifyfeaturebutton|
    - :ref:`qc-tools-identify-feature`
  * - |googlemapbutton|
    - :ref:`qc-tools-google-maps`
  * - |commentoptionsbutton|
    - :ref:`qc-tools-comment-options`
  * - |commentlistbutton|
    - :ref:`qc-tools-comment-list`
  * - |AddReferenceLayer|
    - :ref:`qc-tools-Add-Reference-Layer`
  * - |UpdateStatus|
    - :ref:`qc-tools-update-status`
  * - |commentoricon| / |checkericon|
    - :ref:`qc-tools-current-reviewing-role`
  * - |shortcutbutton|
    - :ref:`qc-tools-shortcut`
  * - |fullscreenbutton|
    - :ref:`qc-tools-fullscreen`


.. |AddReferenceLayer| image:: /images/QC/AddReferenceLayer.png
    :height: 21

.. |UpdateStatus| image:: /images/QC/UpdateStatus.png
    :height: 21

.. |acquiretaskbutton| image:: /images/QC/acquiretaskbutton.png
    :height: 21

.. |submittaskbutton| image:: /images/QC/submittaskbutton.png
    :height: 21

.. |autoacquirebutton| image:: /images/QC/autoacquirebutton.png
    :height: 23

.. |returntaskbutton| image:: /images/QC/returntaskbutton.png
    :height: 20

.. |recenterworkingtaskbutton| image:: /images/QC/recenterworkingtaskbutton.png
    :height: 22

.. |qctoolsrefreshprojectbutton| image:: /images/QC/qctoolsrefreshprojectbutton.png
    :height: 25

.. |commenteditingbutton| image:: /images/QC/commenteditingbutton.png
    :height: 20

.. |searchlocationbutton| image:: /images/QC/searchlocationbutton.png
    :height: 22

.. |showcoordinatesbutton| image:: /images/QC/showcoordinatesbutton.png
    :height: 22

.. |identifyfeaturebutton| image:: /images/QC/identifyfeaturebutton.png
    :height: 25

.. |googlemapbutton| image:: /images/QC/googlemapbutton.png
    :height: 25

.. |commentoptionsbutton| image:: /images/QC/commentoptionsbutton.png
    :height: 20

.. |commentlistbutton| image:: /images/QC/commentlistbutton.png
    :height: 20

.. |shortcutbutton| image:: /images/QC/shortcutbutton-1.png
    :height: 18

.. |fullscreenbutton| image:: /images/QC/fullscreen_icon.png
    :height: 19

.. |commentoricon| image:: /images/QC/commentoricon.png
    :height: 20

.. |checkericon| image:: /images/QC/checkericon.png
    :height: 20


.. _acquire-task:

Acquire Task |acquiretaskbutton|
----------------------------------------------------------------------

.. figure:: /images/QC/Acquire_task.png
   :alt: Auto Acqurie Workflow Demonstration
   :align: center
   :width: 650


To acquire a task,  click on the |acquiretaskbutton| button and the next task in the queue will be loaded to the :ref:`QC:Map Viewer`.

Users can also actively select a task to work on. To do so, hold the :kbd:`Shift` key on your keyboard and click on a task in the Map Viewer. The selected task will be assigned to you if you have access to it and it is still available.

.. _submit-task:

Submit Task |submittaskbutton|
----------------------------------------------------------------------

.. figure:: /images/QC/Submit_task.png
   :alt: Auto Acqurie Workflow Demonstration
   :align: center
   :width: 650


When a Member of the project has reviewed the entire task area and provided all necessary comments, the task is then ready to be submitted to the processing system. To do so, click on the |submittaskbutton| button and the comments on the current task will be synchronized to the Comment Layer of the project and will disappear from the Map Viewer once the upload is completed.

.. tip::
  The shortcut of submitting the current task is :kbd:`Shift` + :kbd:`a`. 

  For information on additional shortcuts, please refer to :ref:`qc-tools-shortcut`.

|

.. _auto-acquire:

Auto Acquire |autoacquirebutton|
----------------------------------------------------------------------

With this function, the system will auto-assign tasks to current users based on the order in the queue. To activate this feature, select the |autoacquirebutton| tool from the Toolbar. Clicking on the button again disables the tool, so tasks will need to be manually acquired.

.. figure:: /images/QC/auto_acquire.png
   :alt: Auto Acqurie Workflow Demonstration
   :align: center
   :height: 500

   *Auto Acqurie Workflow Demonstration*


|

.. _return-task:

Return Task |returntaskbutton|
----------------------------------------------------------------------

It is possible for users to return a pending task back to the task queue after acquiring it. All changes in the task will be discarded and the task will become available to other Members of the project once returned. However, users are not allowed to return a Commenter Submitted State Task since all the changes will be discarded. To return a task, click on the |returntaskbutton| button and confirm to discard all changes.


.. figure:: /images/QC/return_task_workflow.png
  :width: 650
  :align: center
  :alt: Return Task Demonstration.

|

.. _recenter-working-task:

Recenter Working Task |recenterworkingtaskbutton|
----------------------------------------------------------------------
Users can recenter the Map Viewer to the current Working Task using the |recenterworkingtaskbutton| button.

|

.. _qc-tools-refresh-project:

Refresh Project |qctoolsrefreshprojectbutton|
----------------------------------------------------------------------
Users can manually refresh the project using the |qctoolsrefreshprojectbutton| button. Once clicked, updates in the project will be fetched and applied. For instance, the :ref:`qc-tools-comment-list` will be updated to include new comments made by other users, and the status of each task will be updated as well.


.. tip::

  Members can use this tool to update to the most recent project comment option settings whenever the project admin makes any updates.

|

.. _comment-editing:

Comment Editing |commenteditingbutton|
----------------------------------------------------------------------

When the |commenteditingbutton| tool is selected, the following tools will appear at the top-right corner, and the comments stored in the Comment Layer can be viewed and edited with these tools.

.. note::

  Reviewers can only create comments within the Working Task Layer, but they can make modifications in their previously submitted tasks.

.. warning::
  Comment text may not be empty within the QC Tools Application.



* **Select Tool** |selecttool|

    * Select an existing comment geometry to bring up a comment editing box which will have different features based on which user created the comment:

      * For a comment created by the current user, an editing box will appear with the following features that allows the user to:

         * Use the |deletecommentbutton| button to delete the comment.
         * Click on the input box to activate a dropdown that allows a quick selection of some commonly used comments (options can be managed using the :ref:`qc-tools-comment-options` tool).
         * Use the input box to edit the comment text.
         * Use the |savebutton| button to confirm changes.
         * Use the |closebutton| button to discard any changes.

      * For a feature created by other users, a read-only text box will appear with the *comment* attribute value.

.. figure:: /images/QC/qcmodifyacomment.gif
   :alt: Modifying an existing comment
   :align: center

   *Modifying an existing comment*



* **Rectangle Tool** |rectangletool|

    * Draw a rectangle specifying the area of interest and provide a comment on this area when prompted.


* **Polygon Tool** |polygontool|

    * Draw a polygon specifying the area of interest and provide a comment on this area when prompted.
 
The geometry (vertices) of a created comment can be modified following the steps below:

  * Select or create a new comment.

    * Select the comment with the Select Tool |selecttool| or by selecting the comment from the :ref:`qc-tools-comment-list`.
    * OR use the Rectangle Tool to create a new comment.
    * OR use the Polygon Tool to create a new comment.
  * Double-click on the comment polygon again to trigger the geometry editing mode.
  * Click and drag to move the existing vertices or create new vertices.
  * Click :guilabel:`Save` in the comment editing box to save the changes.

  .. figure:: /images/QC/edit_vertex_mode.gif
    :alt: Edit the rectangle after its creation
    :align: center


    *Edit the rectangle after its creation.*

|

.. figure:: /images/QC/editing_shape_illustration.png
    :alt: Actions on a newly created comment.
    :align: center


    *Actions on a Newly Created Comment*


.. |selecttool| image:: /images/QC/selecttool.png
    :height: 20

.. |rectangletool| image:: /images/QC/rectangletool.png
    :height: 20

.. |polygontool| image:: /images/QC/polygontool.png
    :height: 20

.. |deletecommentbutton| image:: /images/QC/deletecommentbutton.png
    :height: 20

.. |savebutton| image:: /images/QC/savebutton.png
    :height: 20

.. |closebutton| image:: /images/QC/closebutton.png
    :height: 20

|

.. _qc-tools-search-location:

Search Location |searchlocationbutton|
----------------------------------------------------------------------
Users can search locations by providing latitude and longitude.

|

.. _qc-tools-show-coordinates:

Show Coordinates |showcoordinatesbutton|
----------------------------------------------------------------------
Users can use this tool to obtain latitude and longitude of a certain location.

|

.. _qc-tools-identify-feature:

Identify Feature |identifyfeaturebutton|
----------------------------------------------------------------------
Users can use this tool to identify features and check corresponding attribute values.

Users can also use keyboard shortcut :kbd:`i` to switch between Identify Feature Tool |identifyfeaturebutton| Comment Editing Tool |commenteditingbutton|. 



|

.. _qc-tools-google-maps:

Google Map Tiles |googlemapbutton|
----------------------------------------------------------------------
Users also have direct access to a Google Map Tiles layer which can be used as a reference. The Google Map Tiles layer is overlaid over the Raster layer that was used to produce the target vector layer. Click on the Google Map Tiles |googlemapbutton| layer to toggle it on or off in the Map Viewer.

|

.. _qc-tools-comment-options:

Comment Options |commentoptionsbutton|
----------------------------------------------------------------------

The Comment Options tool allows users to manage and modify a set of commonly used comment text, ie. :dfn:`comment options`, which can be selected from a dropdown menu upon comment creation to save time.

.. figure:: /images/QC/comment-demo.gif
 :alt: Using Comment Options
 :align: center
 :height: 300

 *Using Comment Options*

|

Comment Option and Comment Type
+++++++++++++++++++++++++++++++++

.. figure:: /images/QC/comment_opt_illustration.png
 :alt: Comment Type and Comment Options
 :align: center
 :height: 300

 *Comment Type and Comment Options*

**Comment Option**

  Comment Options are the options that appear in the dropdown menu when clicking the comment box in the Review Comment Dialog. 
  
  They are created under each :dfn:`Comment Type` so different options will become available under the input box depending on which comment type has been selected.

**Comment Type**

  Comment Type is a categorization of the comment provided. It must be one of the types defined by the Organizer and selected by a project admin of the project. 

  Similar to shared Comment Options, Comment Types are created and managed by Organizer only at the organization-level and selected by a project admin at the project-level.

.. note::

  If you do not need a classification of comments (ie. :dfn:`Comment Type`), the a :dfn:`Default` Comment Type that is set up by default can be selected for all comments and all Comment Options can be created under the :dfn:`Default` Comment Type .

All the comment options available under the account will be displayed in a table under the Comment Option Settings tool. Each comment option table in the setting dialogue has the following components:

.. list-table:: Comment Option Settings
  :widths: 40 60
  :header-rows: 1
  :class: tight-table

  * - Setting
    - Description
  * - **Current Project Checkbox**
    - Whether or not to include this Comment Type or Comment Option in the current project.
  * - **Comment Type**
    - A predefined categorization of comments.
  * - **Comment Option**
    - A text comment that can be selected in a dropdown to be stored in the *comment* attribute.
  * - **Comment Option - Type**
    - One of "Private" or "Shared". The "Shared" type can only be created by the Organizer, which will then be made available in the Comment Option Settings Dialogue for all Members.
  * - **Action - Comment Type**
    - | |commentsettingeditbutton| Edit (Organizer only) : Edit an existing comment type.
      | |commentsettingdeletebutton| Delete (Organizer only) : Remove an existing comment type.
      | |commentsettingaddbutton| Add (private options only for Member accounts) : Add a new comment **option**.
  * - **Action - Comment Option**
    - | |commentsettingeditbutton| Edit (private options only for Member accounts) : Edit an existing comment option.
      | |commentsettingdeletebutton| Delete (private options only for Member accounts) : Remove an existing comment option.

.. |commentsettingaddbutton| image:: /images/QC/commentsettingaddbutton.png
    :height: 20

|

Managing Comment Options
+++++++++++++++++++++++++++++++++

Comment options can be created using the Action column in the settings table:

  * Add a new comment option by clicking the |commentsettingaddbutton| button of the appropriate comment type.
  * Edit the comment text.

    * For an Organizer, select the target comment option type (private or shared) as well.

  * Click :guilabel:`Save` to save the new comment option.
  * Use the checkbox to select the new comment option if it is to be used in the current project.

Existing comment options can be deleted or edited with the |commentsettingeditbutton| and |commentsettingdeletebutton| buttons under the Action column.

  * Member accounts can only delete or edit private comment options.
  * Only the Organizer account can delete or edit shared comment options.

.. figure:: /images/QC/createandapplynewcommentoption.gif
    :alt: Creating a comment option and applying it in the current project.
    :align: center

    *Creating a comment option and applying it in the current project.*



|

Managing Comment Types (Organizer only)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.. figure:: /images/QC/organizer_comment_settings.png
    :alt: Comment Options Settings Dialogue (Organizer Account Project Admin View)
    :align: center
    :height: 360

    *Comment Options Settings Dialogue (Organizer Account Project Admin View)*

The **Organizer** account can be used to create a new comment type:

  * Use the |createnewtypebutton| button to create a new comment type entry in the settings table.
  * Edit the name of the new comment type
  * Click :guilabel:`Save` to save the new comment type.
  * :ref:`Create comment options under the new type<QC:Managing Comment Options>`.
  * Use the checkbox to select the new comment type if it is to be used in the current project.

Existing comment types can be deleted or edited with the |commentsettingeditbutton| and |commentsettingdeletebutton| buttons under the Action column.

.. note::
  Deleting a comment type will delete all the comment options under the type as well.

|

Private and Shared Comment Options
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

**Private Comment Options**

All private comment options listed under Comment Options are created and saved at the account level and can be used for all projects. 

.. note:: 
  Users will need to manually select the options to be included in their comment dropdown for each project.

.. _shared-comment:

**Shared Comment Options (Created by Organizer Only)**

The Organizer can manage a shared set of predefined comments for all Member accounts to standardize the comment inputs. The shared comment options will be visible to all Members in their comment option settings dialogue and can be used similar to a private comment option. 

Shared Comment Options can only be created using the Organizer account. However, a project admin can make a selection using existing shared comment options and apply their selection of the shared comment options to all reviewers of the project.



.. |createnewtypebutton| image:: /images/QC/createnewtypebutton.png
    :height: 20

.. |commentsettingeditbutton| image:: /images/QC/commentsettingeditbutton.png
    :height: 20

.. |commentsettingdeletebutton| image:: /images/QC/commentsettingdeletebutton.png
    :height: 20

.. |newtypebutton| image:: /images/QC/new_type_button.png
    :height: 20


.. list-table:: Comment Option Settings Accessibility
  :widths: 10 45 45
  :header-rows: 1
  :class: tight-table

  * - Access Level
    - Current Project - Selected
    - Current Project - Unselected
  * - Shared
    -
     - Set up by the Organizer only
     - Selected by a project admin or the current user
     - Organization-based
     - Visible to all users in the setting dialogue
     - Enabled in the current project
    -
     - Set up by the Organizer only
     - Organization-based
     - Visible to all users in the setting dialogue
     - Disabled in the current project
  * - Private
    -
     - Set up by the current user
     - Selected by a Project Member
     - Account-based
     - Privately visible, all projects
     - Enabled in the current project
    -
     - Set up by the current user
     - Account-based
     - Privately visible, all projects
     - Disabled in the current project

|

.. _enable-customized-comments:

Enable Customized Comments (Project Admin only)
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.. figure:: /images/QC/member_project_admin_comment_settings.png
    :alt: Comment Options Settings Dialogue (Member Account Project Admin View)
    :align: center
    :height: 360

    *Comment Options Settings Dialogue (Member Account Project Admin View)*

There is an additional setting for a project admin to control whether reviewers can create comments with customized input text that are outside of the selected set of comment options.

* When this feature is turned **on**:

  * Reviewers of the project can input any comment text as they wish. 
  * Reviewers can use private comment options in the project.

  .. figure:: /images/QC/enable_customized_compare.png
    :alt: Customized Comment Enabled
    :align: center
    :height: 300

    *Customized Comment Enabled*

* When this feature is turned **off**:

  * Reviewers can only select from the available comment options as set by project admin when editing comments
  * Under reviewers' accounts, all comment option settings will be greyed out and locked so that they can only be modified by project admin. 
  * The :ref:`apply-shared-comment-option-selection-to-all-users` setting is turned on automatically and can not be turned off so the comment options that that the project admin configured would be synchronized to all reviewers.
  * Reviewers will receive an error if they attempt to save a comment with text not in the provided options when customized comments are not enabled.

  .. figure:: /images/QC/disable_customized_compare.png
    :alt: Customized Comment Disabled
    :align: center
    :height: 300

    *Customized Comment Disabled*

|

.. _apply-shared-comment-option-selection-to-all-users:

Apply Shared Comment Option Selection to All Users (Project Admin only)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Another setting for project admin is to apply their selection of the shared comment options to all reviewers of the project. 

.. figure:: /images/QC/apply_demo.gif
 :alt: Applying shared comment option selection to all users
 :align: center
 :height: 220

 *Applying shared comment option selection to all users*

* When project admin update their comment option settings with this feature turned **on**:

  * The selection of the shared comment option in the project will be updated to match those of the project admin updating the settings.

  .. figure:: /images/QC/Expected_Impact_after_apply.png
   :alt: Apply Shared Comment Option Selection to All Users Changes
   :align: center

   *Changes Expected with Apply Shared Comment Option Selection to All Users turned on*

|

* When project admin update their comment option settings with this feature turned **off**:

  * The selection in a project admin 's account is independent of the selection for any reviewer in the project.




.. |enablecheckbox| image:: /images/QC/enable-checkbox.png
    :height: 20

.. |applycheckbox| image:: /images/QC/apply-checkbox.png
    :height: 20

|

Sort Selected Options
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

In order to quickly locate the comment type users intend to use from the dropdown list, users can re-arrange the order of the comment type by clicking :guilabel:`Sort Selected Options` on the bottom-left corner of **Comment Option Settings** window.

Users can drag and drop the comment types into to the rank they desired. Click :guilabel:`Confirm` once it is done.

Once the new order is set, the comment types will follow the new order when users try to create a new comment.

.. figure:: /images/QC/SortSelectedOptions.gif
   :alt: Sort Selected Options
   :align: center

   *Sort Selected Options*


|

.. _qc-tools-comment-list:

Comment List |commentlistbutton|
----------------------------------------------------------------------
The Comment List panel will display a list of the existing comments in the project. Clicking on a comment from the list will pan to the location of the comment geometry, and bring up a comment editing box.

.. figure:: /images/QC/comment-editing-role-table.png
   :alt: The Comment Editing Accessibility Table.
   :align: center

   *The Comment Editing Accessibility Table*

.. note::

  For comments created in the current project, the Admin can edit all comments in the comment list, whereas reviewers can only edit their own comments.
  All users can edit comments imported from comment files.


.. figure:: /images/QC/comment-list-demo.png
   :alt: The Comment List Panel with an editable comment selected.
   :align: center

   *The Comment List Panel*


.. figure:: /images/QC/comment_list_components.png
   :alt: The Comment List Panel with an editable comment selected.
   :align: center
   :height: 100

   *The Comment List Panel with an editable comment selected.*

.. list-table::
 :widths: 30 70
 :header-rows: 1
 :class: tight-table
 :align: center

 * - Component
   - Description
 * - Comment #
   - A time-ordered numeric identifier for searching and referencing comments.
 * - Comment Content
   - The text content of this comment.
 * - Comment Type
   - The Comment Type of this comment.
 * - Username
   - The username of the comment owner
 * - Comment Detail Info Button
   - Display when clicking on the item, clicking this button will display the comment's details.

|


.. figure:: /images/QC/comment_detail_info.png
   :alt: The Comment List Panel with an editable comment selected.
   :align: center
   :height: 200

   *Comment Detail Info Box Sample*


**Search Comment**

 * **Search by Username**
   search comments within current QC project by entering the username of the comment owner.

 * **Search by User Email**
   This feature is designed to search for comments made by a certain user, given that individuals may have the same username.

 * **Search by Comment # id**
   Each QC project's comments, including imported comments, are identified by a time-ordered number identifier. Users can search specific comment using this parameter.

|

.. _qc-tools-add-reference-layer:

Add Reference Layer |AddReferenceLayer|
---------------------------------------------
Users can add historical project comment file as a reference layer to the current QC project.

By clicking |AddReferenceLayer|, users can navigate to the path that contains the comment file they would like to add. 

.. figure:: /images/QC/AddReferenceLayerWindow.png
   :alt: Add Reference Layer Window
   :align: center
   :height: 360

   *Add Reference Layer Window*

|

Multiple reference layers can be added to one project, all added reference layer are grouped under **Reference Layers** in **Layers Panel**.

.. figure:: /images/QC/ReferenceLayerGroup.png
   :alt: Reference Layer Grouped in Layer Panel
   :align: center
   :height: 360

   *Reference Layer Grouped in Layer Panel*

|

Users can also switch to different comment lists that come from different reference layer in the comment list window. In the first dropdown, users can switch to the reference layer they would like to examine and the list will switch to that particular layer's. 

.. figure:: /images/QC/ReferenceLayerSwitch.gif
   :alt: Reference Layer Switch
   :align: center
   :height: 360

   *Switch Comment Lists Among Different Layers*

|


.. _qc-tools-update-status:

Update Status |UpdateStatus| (project admin only)
---------------------------------------------------------------------------------------------------

This function in the tool bar is the same as update QC review status function in the project list. project admin can jump out of the current review session and change the project status accordingly.


|

.. _qc-tools-current-reviewing-role:

Current Reviewing Role |commentoricon| / |checkericon|
----------------------------------------------------------------------
The Project Reviewing Role of the current user will be displayed in the Toolbar, indicating whether the current user has **Commenter** or **Checker** capabilities.


|

.. _qc-tools-shortcut:

Shortcut Tooltips |shortcutbutton|
----------------------------------------------------------------------
The Shortcut Tooltips provides a legend for all shortcuts that can be used to enhance the efficiency of the QC procedure.

.. list-table:: QC Tools Shortcut Tooltips
  :widths: 30 20 30
  :width: 15
  :header-rows: 1
  :align: left

  * - Description
    - Shortcut
    - Related Features
  * - Show / Hide Vector Layers of Focus
    - :kbd:`r`
    - :ref:`QC:Layers Panel`
  * - Switch Drawing Tools |selecttool| |rectangletool| |polygontool|
    - :kbd:`c`
    - :ref:`comment-editing`
  * - Switch between the Identify Feature and Comment Editing tools
    - :kbd:`i`
    - :ref:`qc-tools-identify-feature`
  * - Acquire Task |acquiretaskbutton|
    - :kbd:`Shift` + :kbd:`d`
    - :ref:`acquire-task`
  * - Submit Task |submittaskbutton|
    - :kbd:`Shift` + :kbd:`a`
    - :ref:`submit-task`
  * - Return Task |returntaskbutton|
    - :kbd:`Shift` + :kbd:`z`
    - :ref:`return-task`
  * - Enter Selected Comment Option |commenteditingbutton|
    - :kbd:`Space`
    - :ref:`comment-editing`
  * - Enter Typed Comment |commenteditingbutton|
    - :kbd:`Enter`
    - :ref:`comment-editing`


.. _qc-tools-fullscreen:

Full-Screen Mode |fullscreenbutton|
----------------------------------------------------------------------

The full-screen mode can provide users with an immersive experience, allowing them to view the details more clearly and increase their efficiency.

|


.. _update-qc-project-status:

Action Functions: Update Status |changeqcprojectstatusbutton|
************************************************************************************************
A QC Project can be in one of the following states:


  #. :guilabel:`prepare_data` (not manually set): The QC Project is being set up and the necessary project layers are being generated.
  #. :guilabel:`pending` At this stage, the project is created but is not open to users to review yet.
  #. :guilabel:`active` : The QC Project is up and open, so users can start reviewing and providing comments.
  #. :guilabel:`active (all tasks submitted)` : The QC Project is up and open, and all tasks have been submitted, to signal to the **Organizer**  that this project can be updated to the complete status.
  #. :guilabel:`stopped` : The owner of the project has paused receiving comments, so no member will be allowed to create or modify any comments.
  #. :guilabel:`completed`: The QC Project has been completed and indicated that no more comments need to be provided. Completed projects will be archived under :ref:`Project History<qc-project-history>`.

Once the project is set to :guilabel:`completed` , a prompt window will appear to collect general feedback for this particular QC project.

.. figure:: /images/QC/qccommentinput.png
   :alt: QC general comment input
   :align: center
   :height: 300

   *QC General Comment Input*


By clicking :guilabel:`OK`, the current QC project is considered as completed and finished. The comment file will be shared with production team at Ecopia automatically through the QC review system. Production team will reivew the received comments and provide adjustment accordingly.


|

.. _qc-project-history:

Project History (QC Review Admin Only) |projecthistorybutton|
*********************************************************************************************************************
The Project History is an archive of completed QC Projects, that allows a QC Review Admin to re-examine the comments made in the project, reopen or permanently delete a QC Project that they created.

QC review admin can also search the completed QC projects by using its ID or project name.

.. figure:: /images/QC/qcprojecthistory.png
   :alt: QC Project History
   :align: center

   *QC Project History*

.. |membersmanagebutton| image:: /images/QC/membersmanagebutton.png
    :height: 24

.. |openqcprojectbutton| image:: /images/QC/openqcprojectbutton.png
    :height: 17

.. |tasklayer| image:: /images/QC/tasklayer.png
	:height: 20

.. |tasklayerpending| image:: /images/QC/tasklayerpending.png
	:height: 20

.. |tasklayersubmittedbyme| image:: /images/QC/tasklayersubmittedbyme.png
    :height: 20

.. |tasklayersubmittedbycommenter| image:: /images/QC/tasklayersubmittedbycommenter.png
    :height: 20

.. |tasklayersubmittedbyothers| image:: /images/QC/tasklayersubmittedbyothers.png
    :height: 18

.. |tasklayerunderreviewbyothers| image:: /images/QC/tasklayerunderreviewbyothers.png
    :height: 18

.. |tasklayercommentlayer| image:: /images/QC/tasklayercommentlayer.png
    :height: 20

.. |tasklayerworkingtask| image:: /images/QC/tasklayerworkingtask.png
    :height: 20

.. |changeqcprojectstatusbutton| image:: /images/QC/changeqcprojectstatusbutton.png
    :height: 25

.. |projecthistorybutton| image:: /images/QC/projecthistorybutton.png
    :height: 20